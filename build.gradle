plugins {
    id 'java'
    id 'groovy'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

// Configure Groovy source sets
sourceSets {
    test {
        groovy {
            srcDirs = ['src/test/groovy']
        }
        java {
            srcDirs = ['src/test/java']
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.apache.kafka:kafka-streams'
    implementation 'org.springframework.integration:spring-integration-http'
    implementation 'org.springframework.integration:spring-integration-jpa'
    implementation 'org.springframework.integration:spring-integration-kafka'
    implementation 'org.springframework.kafka:spring-kafka'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.integration:spring-integration-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.codehaus.groovy:groovy-all:3.0.19'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-3.0'
    testImplementation 'org.spockframework:spock-spring:2.3-groovy-3.0'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:testcontainers:1.19.7'
    testImplementation 'org.testcontainers:kafka:1.19.7'
    testImplementation 'org.testcontainers:spock:1.19.7'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Node configuration
node {
    version = '20.19.2'
    download = true
    workDir = file("${project.buildDir}/nodejs")
    npmWorkDir = file("${project.buildDir}/npm")
}

// Frontend tasks
task installFrontendDependencies(type: NpmTask) {
    description = 'Install frontend dependencies'
    args = ['install']
}

task buildFrontend(type: NpmTask) {
    description = 'Build frontend'
    args = ['run', 'build']
    dependsOn installFrontendDependencies
}

// Make the processResources task depend on the frontend build
processResources.dependsOn buildFrontend

// Clean frontend build artifacts
clean {
    delete "${projectDir}/src/main/resources/public"
    delete "${projectDir}/node_modules"
}
